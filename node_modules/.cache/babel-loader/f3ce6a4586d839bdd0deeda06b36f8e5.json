{"ast":null,"code":"var _jsxFileName = \"/Users/jacques/Desktop/codingfolder/E-commerce-App/src/pages/shop/shop.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/jacques/Desktop/codingfolder/E-commerce-App/src/pages/shop/shop.jsx"],"names":["React","Component","Route","connect","CollectionsOverview","CollectionPage","WithSpinner","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGJ,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGL,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BY,KAD6B,GACrB;AACNC,MAAAA,OAAO,EAAE;AADH,KADqB;AAAA,SAK7BC,uBAL6B,GAKH,IALG;AAAA;;AAO7BC,EAAAA,iBAAiB,GAAG;AAAA,UACVP,iBADU,GACY,KAAKQ,KADjB,CACVR,iBADU;AAElB,UAAMS,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AAEF,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ4B,CAA/B;AAKC;;AAGDU,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKR,KADlB,CACGQ,KADH;AAAA,UAEGX,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKW,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGT,KAAD,IACxC,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAErB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH;;AA7B4B;;AA8BhC;;AAED,MAAMsB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCnB,EAAAA,iBAAiB,EAAEa,cAAc,IAC7BM,QAAQ,CAACnB,iBAAiB,CAACa,cAAD,CAAlB;AAFuB,CAAJ,CAAnC;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCf,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop-actions';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n    state = {\n      loading: true\n    };\n   \n    unsubscribeFromSnapshot = null;\n   \n    componentDidMount() {\n      const { updateCollections } = this.props;\n      const collectionRef = firestore.collection(\"collections\");\n    \n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n        this.setState({ loading: false });\n      });\n    }\n   \n\n    render() {\n        const { match } = this.props;\n        const { loading } = this.state;\n        return(\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => \n                    <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n            </div>\n        );\n    }\n};\n\nconst mapDispatchToProps = dispatch =>({\n    updateCollections: collectionsMap => \n        dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}